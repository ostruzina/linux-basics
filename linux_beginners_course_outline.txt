While some of the following points make more sense to be covered at the beginning
of the course than at the end (and vice versa), they are not necessarily meant to
be followed in the given order.

Some of these points may be considered items of a course outline, others represent
isolated topics and ideas aimed at making the class more fun and interesting.

A good thing would be to prepare a given set of files and folders and copy it on
everybody's machines - identical for everyone and tailor-made with the planned
tasks and operations in mind, so everybody can work on the same data.

1. What is Linux
  - its philosophy and origins; Unix, open source
  - simplicity and ease of the system
  - openness and transparency
  - brief overview of distributions, how they differ, what they have in common
  - comparison with Windows, how they differ, what they have in common
  - touch on its connection with Mac in terms of both being Unix based
  - community and accessibility of online help

2. Accomplishing various tasks using Linux
  - show both GUI and CLI way side by side where applicable
    -- show how the CLI way can be more powerful over the GUI way thanks to
    parameters etc.
  - alternatives to known MS software - show them they will not be stranded when
  they decide to switch

3. "Dissection" of a command
  - actual command, parameters, arguments
    -- examples - select some of the commands used before for demonstration

4. Tips and tricks to make everyday work easier
  - we can maybe set up a poll for experienced users to share their secret
  tricks (interesting tools, aliases, custom shortcuts and settings etc.)

5. Show some "magic"
  - show how a one-line command can perform a powerful action that would take
  ages to do manually
    -- one idea can be for example a `sed` command that substitutes all given
    words in several files at once thanks to wildcards etc.

6. Ideas from students
  - distribute post-it papers and gather suggestions from the attendees
    -- what activities annoy them about their daily interactions with a computer
    -- have they ever wondered how some specific task can be done easier?
  - try and see whether Linux has easier and more comfortable alternatives to
  accomplish the things people have listed
  - alternatively can be done beforehand
    -- include the question into their application form, to provide more time for
    preparation (people can come up with complex ideas - thinking on the spot
    might require some brainstorming and a lot of improvisation)
